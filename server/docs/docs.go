// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/article-tags/{article_id}": {
            "get": {
                "description": "Get a list of tags associated with a specific article ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Tags"
                ],
                "summary": "Get tags by article ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to retrieve tags for",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tags for the article",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Tags"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assigns a list of tags (by name) to a specific article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Tags"
                ],
                "summary": "Assign tags to an article by tag names",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of tag names",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignTagsByNameDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags assigned successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Tags"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/article-tags/{article_id}/{tag_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a specific tag from an article by their IDs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Tags"
                ],
                "summary": "Remove a tag from an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the tag to remove",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag removed from article successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID or tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles": {
            "get": {
                "description": "Get a list of all blog articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get all articles",
                "responses": {
                    "200": {
                        "description": "List of articles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "articles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Article"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new blog article with tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "description": "Article creation details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateArticleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Article successfully created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "article": {
                                                    "$ref": "#/definitions/model.Article"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles/author/{user_id}": {
            "get": {
                "description": "Get a list of articles by a specific user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get articles by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user whose articles to retrieve",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles by user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "articles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Article"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles/author/{user_id}/paginated": {
            "get": {
                "description": "Get a paginated list of articles by a specific user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get articles by user ID with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user whose articles to retrieve",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of articles by user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "articles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Article"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/dto.PaginationMetadata"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or pagination parameters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles/category/{category_name}": {
            "get": {
                "description": "Get a list of articles by category name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get articles by category name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the category to retrieve articles from",
                        "name": "category_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles by category",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "articles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Article"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid category name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles/category/{category_name}/paginated": {
            "get": {
                "description": "Get a paginated list of articles by category name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get articles by category name with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the category to retrieve articles from",
                        "name": "category_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of articles by category",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "articles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Article"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/dto.PaginationMetadata"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles/paginated": {
            "get": {
                "description": "Get a paginated list of all blog articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get all articles with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of articles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "articles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Article"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/dto.PaginationMetadata"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles/{article_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing article by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Update an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to update",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Article update details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateArticleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "article": {
                                                    "$ref": "#/definitions/model.Article"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID or payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden (user does not own the article)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an article by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Delete an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to delete",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden (user does not own the article)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/articles/{slug}": {
            "get": {
                "description": "Get article details by its slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the article to retrieve",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "article": {
                                                    "$ref": "#/definitions/model.Article"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid slug",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Login",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh access token using refresh token from cookie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "Access token refreshed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Refresh token not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user with name, email, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "$ref": "#/definitions/model.User"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/bookmarks": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new bookmark for an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Create a new bookmark",
                "parameters": [
                    {
                        "description": "Bookmark creation details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Bookmark"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bookmark successfully created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "bookmark": {
                                                    "$ref": "#/definitions/model.Bookmark"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a bookmark for an article by article ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Delete a bookmark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID to unbookmark",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/bookmarks/check": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if a specific article is bookmarked by the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Check if an article is bookmarked by the current user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to check",
                        "name": "article_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "bookmarked": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/bookmarks/{user_id}": {
            "get": {
                "description": "Get a list of bookmarks for a specific user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get bookmarks by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user whose bookmarks to retrieve",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarks for the user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "bookmarks": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Bookmark"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Get a list of all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Category"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new category with a given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category creation details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category successfully created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "category": {
                                                    "$ref": "#/definitions/model.Category"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/categories/{category_id}": {
            "get": {
                "description": "Get category details by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the category to retrieve",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "category": {
                                                    "$ref": "#/definitions/model.Category"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the category to update",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category update details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "category": {
                                                    "$ref": "#/definitions/model.Category"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid category ID or payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the category to delete",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new comment on an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new comment",
                "parameters": [
                    {
                        "description": "Comment creation details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment successfully created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "comment": {
                                                    "$ref": "#/definitions/model.Comment"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/comments/article/{article_id}": {
            "get": {
                "description": "Get a list of comments for a specific article ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get comments by article ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to retrieve comments for",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments for the article",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "comments": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Comment"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/comments/user/{user_id}": {
            "get": {
                "description": "Get a list of comments by a specific user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get comments by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user whose comments to retrieve",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments by the user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "comments": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Comment"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/comments/{comment_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing comment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the comment to update",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment update details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "content": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden (user does not own the comment)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a comment by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the comment to delete",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid comment ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get comprehensive application and database health status with context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/controller.HealthResponse"
                        }
                    }
                }
            }
        },
        "/health/database": {
            "get": {
                "description": "Get detailed database connection pool statistics with context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Database connection pool statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.ConnectionStats"
                        }
                    }
                }
            }
        },
        "/health/detailed": {
            "get": {
                "description": "Get comprehensive health information with individual check results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Detailed health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.DetailedHealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/controller.DetailedHealthResponse"
                        }
                    }
                }
            }
        },
        "/likes": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a like to a specific article by the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Add a like to an article",
                "parameters": [
                    {
                        "description": "Like creation details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Likes"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Like successfully added",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "like": {
                                                    "$ref": "#/definitions/model.Likes"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a like from a specific article by the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Remove a like from an article",
                "parameters": [
                    {
                        "description": "Article ID to unlike",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "article_id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/likes/article/{article_id}": {
            "get": {
                "description": "Get a list of likes for a specific article ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Get likes by article ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to retrieve likes for",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of likes for the article",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "likes": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Likes"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/likes/check": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if a specific article is liked by the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Check if an article is liked by the current user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to check",
                        "name": "article_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "liked": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid article ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/likes/user/{user_id}": {
            "get": {
                "description": "Get a list of likes by a specific user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Get likes by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user whose likes to retrieve",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of likes by the user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "likes": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Likes"
                                                    }
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Get comprehensive application metrics including request, database, application, and error metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get all application metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    }
                }
            }
        },
        "/metrics/application": {
            "get": {
                "description": "Get application-level metrics including memory usage, goroutine count, and uptime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get application metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    }
                }
            }
        },
        "/metrics/database": {
            "get": {
                "description": "Get database performance metrics including query times, connection pool stats, and error rates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get database metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    }
                }
            }
        },
        "/metrics/errors": {
            "get": {
                "description": "Get error tracking metrics including error rates, error types, and error distribution",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get error metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    }
                }
            }
        },
        "/metrics/requests": {
            "get": {
                "description": "Get HTTP request metrics including latency, throughput, and status code distribution",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get request metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    }
                }
            }
        },
        "/metrics/reset": {
            "post": {
                "description": "Reset all collected metrics to zero (useful for testing or periodic resets)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Reset all metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    }
                }
            }
        },
        "/metrics/summary": {
            "get": {
                "description": "Get a high-level summary of key metrics for dashboard display",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get metrics summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.MetricsResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Get a list of all tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get all tags",
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Tags"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new tag with a given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Create a new tag",
                "parameters": [
                    {
                        "description": "Tag creation details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Tags"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tag successfully created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Tags"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tags/{tag_id}": {
            "get": {
                "description": "Get tag details by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get tag by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the tag to retrieve",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "tag": {
                                                    "$ref": "#/definitions/model.Tags"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing tag by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Update a tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the tag to update",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag update details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Tags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "tag": {
                                                    "$ref": "#/definitions/model.Tags"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid tag ID or payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a tag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the tag to delete",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tags/{tag_id}/articles": {
            "get": {
                "description": "Get a list of articles associated with a specific tag ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Tags"
                ],
                "summary": "Get articles by tag ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the tag to retrieve articles for",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles with the specified tag",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "articles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.Article"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a list of all registered users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.User"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/paginated": {
            "get": {
                "description": "Get a paginated list of all registered users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of users",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/model.User"
                                                    }
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/dto.PaginationMetadata"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Get user details by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to retrieve",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "$ref": "#/definitions/model.User"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to update",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "$ref": "#/definitions/model.User"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete user account by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to delete",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/dto.ErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.ConnectionStats": {
            "type": "object",
            "properties": {
                "idle_connections": {
                    "type": "integer"
                },
                "in_use_connections": {
                    "type": "integer"
                },
                "max_idle_closed": {
                    "type": "integer"
                },
                "max_idle_time_closed": {
                    "type": "integer"
                },
                "max_lifetime_closed": {
                    "type": "integer"
                },
                "open_connections": {
                    "type": "integer"
                },
                "wait_count": {
                    "type": "integer"
                },
                "wait_duration": {
                    "type": "integer"
                }
            }
        },
        "controller.ApplicationHealthStatus": {
            "type": "object",
            "properties": {
                "config_loaded": {
                    "type": "boolean"
                },
                "goroutines": {
                    "type": "integer"
                },
                "memory": {
                    "$ref": "#/definitions/controller.MemoryStats"
                },
                "services_ready": {
                    "type": "boolean"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.DatabaseHealthStatus": {
            "type": "object",
            "properties": {
                "last_checked": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "response_time_ms": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.DependencyHealthStatus": {
            "type": "object",
            "properties": {
                "last_checked": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "response_time_ms": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.DetailedHealthResponse": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/controller.ApplicationHealthStatus"
                },
                "checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.HealthCheck"
                    }
                },
                "connection_stats": {
                    "$ref": "#/definitions/config.ConnectionStats"
                },
                "database": {
                    "$ref": "#/definitions/controller.DatabaseHealthStatus"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.DependencyHealthStatus"
                    }
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "controller.HealthCheck": {
            "type": "object",
            "properties": {
                "critical": {
                    "type": "boolean"
                },
                "duration_ms": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "controller.HealthResponse": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/controller.ApplicationHealthStatus"
                },
                "connection_stats": {
                    "$ref": "#/definitions/config.ConnectionStats"
                },
                "database": {
                    "$ref": "#/definitions/controller.DatabaseHealthStatus"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.DependencyHealthStatus"
                    }
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "controller.MemoryStats": {
            "type": "object",
            "properties": {
                "alloc_bytes": {
                    "type": "integer"
                },
                "heap_alloc_bytes": {
                    "type": "integer"
                },
                "heap_sys_bytes": {
                    "type": "integer"
                },
                "num_gc": {
                    "type": "integer"
                },
                "sys_bytes": {
                    "type": "integer"
                },
                "total_alloc_bytes": {
                    "type": "integer"
                }
            }
        },
        "controller.MetricsResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.APIResponse": {
            "description": "Standard API response format with metadata and context information",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Response data (varies by endpoint)"
                },
                "error": {
                    "description": "Error details (only present when success=false)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    ]
                },
                "meta": {
                    "description": "Response metadata with request tracking",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ResponseMetadata"
                        }
                    ]
                },
                "pagination": {
                    "description": "Pagination metadata (for paginated responses)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.PaginationMetadata"
                        }
                    ]
                },
                "success": {
                    "description": "Indicates if the request was successful",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "dto.AssignTagsByNameDTO": {
            "type": "object",
            "required": [
                "article_id",
                "tags"
            ],
            "properties": {
                "article_id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.CreateArticleRequest": {
            "type": "object",
            "required": [
                "category_id",
                "content",
                "title"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "description": "Error response structure with detailed error information",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code for programmatic handling",
                    "type": "string",
                    "example": "VALIDATION_ERROR"
                },
                "details": {
                    "description": "Additional error details",
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "description": "Human-readable error message",
                    "type": "string",
                    "example": "Invalid input data"
                },
                "request_id": {
                    "description": "Request ID for tracking",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "timestamp": {
                    "description": "Error timestamp",
                    "type": "string",
                    "example": "2025-07-24T20:43:16.123456789+07:00"
                }
            }
        },
        "dto.LoginDto": {
            "type": "object",
            "required": [
                "identifier"
            ],
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.PaginationMetadata": {
            "description": "Pagination metadata for paginated responses",
            "type": "object",
            "properties": {
                "has_next": {
                    "description": "Whether there is a next page",
                    "type": "boolean",
                    "example": true
                },
                "has_prev": {
                    "description": "Whether there is a previous page",
                    "type": "boolean",
                    "example": false
                },
                "limit": {
                    "description": "Number of items per page",
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "description": "Current page number (1-based)",
                    "type": "integer",
                    "example": 1
                },
                "request_id": {
                    "description": "Request ID for tracking",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "total": {
                    "description": "Total number of items",
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "description": "Total number of pages",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.ResponseMetadata": {
            "description": "Response metadata containing request tracking and performance information",
            "type": "object",
            "properties": {
                "processing_time_ms": {
                    "description": "Request processing time in nanoseconds",
                    "type": "integer",
                    "example": 15000000
                },
                "request_id": {
                    "description": "Unique request identifier for tracking",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "timestamp": {
                    "description": "Response generation timestamp",
                    "type": "string",
                    "example": "2025-07-24T20:43:16.123456789+07:00"
                },
                "version": {
                    "description": "API version",
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "dto.UpdateArticleRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.Article": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/model.Category"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "model.Bookmark": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/model.Article"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Comment": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/model.Article"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.Likes": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/model.Article"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.Tags": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:4300",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Develapar API",
	Description:      "REST API untuk aplikasi blog Develapar dengan fitur lengkap untuk manajemen artikel, komentar, kategori, tag, bookmark, dan like. API menggunakan standard response format dengan metadata, request tracking, rate limiting, dan comprehensive error handling.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
